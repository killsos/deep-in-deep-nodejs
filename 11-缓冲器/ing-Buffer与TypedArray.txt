Buffer 实例也是 Uint8Array 实例
但是与 ECMAScript 2015 中的 TypedArray 规范还是有些微妙的不同
例如，当 ArrayBuffer#slice() 创建一个切片的副本时
Buffer#slice() 的实现是在现有的 
Buffer 上不经过拷贝直接进行创建
这也使得 Buffer#slice() 更高效。

遵循以下注意事项，也可以从一个 Buffer 创建一个新的 TypedArray 实例：

Buffer 对象的内存是拷贝到 TypedArray 的，而不是共享的。

Buffer 对象的内存是被解析为一个明确元素的数组，而不是一个目标类型的字节数组。 

也就是说，new Uint32Array(Buffer.from([1, 2, 3, 4])) 

会创建一个包含 [1, 2, 3, 4] 四个元素的 Uint32Array

而不是一个只包含一个元素 [0x1020304] 或 [0x4030201] 的 Uint32Array 。

也可以通过 TypeArray 对象的 .buffer 属性创建一个新建的且与 TypedArray实例共享同一分配内存的 Buffer 。